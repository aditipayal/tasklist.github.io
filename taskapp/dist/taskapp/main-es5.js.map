{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/guard/auth.guard.ts","webpack:///src/app/pages/dashboard/addtask/addtask.component.ts","webpack:///src/app/pages/dashboard/addtask/addtask.component.html","webpack:///src/app/pages/dashboard/changepassword/changepassword.component.ts","webpack:///src/app/pages/dashboard/changepassword/changepassword.component.html","webpack:///src/app/pages/dashboard/dashboard.component.ts","webpack:///src/app/pages/dashboard/dashboard.component.html","webpack:///src/app/pages/dashboard/feedback/feedback.component.ts","webpack:///src/app/pages/dashboard/feedback/feedback.component.html","webpack:///src/app/pages/dashboard/task/task.component.ts","webpack:///src/app/pages/dashboard/task/task.component.html","webpack:///src/app/pages/dashboard/welcome/welcome.component.ts","webpack:///src/app/pages/dashboard/welcome/welcome.component.html","webpack:///src/app/pages/edittask/edittask.component.ts","webpack:///src/app/pages/edittask/edittask.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/register/register.component.ts","webpack:///src/app/pages/register/register.component.html","webpack:///src/app/pipes/labelfilter.pipe.ts","webpack:///src/app/service/login.service.ts","webpack:///src/app/service/register.service.ts","webpack:///src/app/service/task.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuard","router","console","log","localStorage","getItem","undefined","fire","navigate","providedIn","AddtaskComponent","fb","tser","addtaskform","sno","taskname","tasklabels","taskdescription","dateadded","datecompletion","status","validate","formData","getRawValue","addtaskpanel","subscribe","res","resData","err","errmsg","msg","group","required","addtask","ChangepasswordComponent","rser","changepasswordform","oldpass","newpass","conpass","fData","changepass","DashboardComponent","uid","removeItem","logout","FeedbackComponent","feedform","feedname","feedemail","feedmobile","feedmessage","addfeed","givefeed","TaskComponent","deletegettask","addgettask","taskData","cdata","WelcomeComponent","EdittaskComponent","ar","edittaskform","params","par","cid","addgettaskbyid","resdata","controls","patchValue","addposttaskbyid","edittask","LoginComponent","lser","myform","loginpanel","setItem","ulogin","Login","RegisterComponent","regform","username","email","mobile","password","registerpanel","Register","LabelfilterPipe","items","filter","defaultFilter","Array","isArray","filterKeys","Object","item","reduce","x","keyName","RegExp","test","some","name","LoginService","http","url","data","post","RegisterService","TaskService","get","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AuthGuard } from './guard/auth.guard';\nimport { ChangepasswordComponent } from './pages/dashboard/changepassword/changepassword.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { TaskComponent } from './pages/dashboard/task/task.component';\nimport { AddtaskComponent } from './pages/dashboard/addtask/addtask.component';\nimport { WelcomeComponent } from './pages/dashboard/welcome/welcome.component';\nimport { FeedbackComponent } from './pages/dashboard/feedback/feedback.component';\nimport { EdittaskComponent } from './pages/edittask/edittask.component';\nconst routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate : [AuthGuard],\n  children: [{path: 'task', component: TaskComponent},\n     {path: '', component: WelcomeComponent},\n     {path: 'changepassword', component: ChangepasswordComponent},\n     {path: 'addtask', component: AddtaskComponent},\n     {path: 'edittask/:id', component: EdittaskComponent},\n     {path: 'Feedback', component: FeedbackComponent}]},\n  {path: 'register', component: RegisterComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'taskapp';\n}\n","<router-outlet></router-outlet>","import { AuthGuard } from './guard/auth.guard';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { TaskComponent } from './pages/dashboard/task/task.component';\nimport { AddtaskComponent } from './pages/dashboard/addtask/addtask.component';\nimport { WelcomeComponent } from './pages/dashboard/welcome/welcome.component';\nimport { FeedbackComponent } from './pages/dashboard/feedback/feedback.component';\nimport { ChangepasswordComponent } from './pages/dashboard/changepassword/changepassword.component';\nimport { LabelfilterPipe } from './pipes/labelfilter.pipe';\nimport { EdittaskComponent } from './pages/edittask/edittask.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    RegisterComponent,\n    TaskComponent,\n    AddtaskComponent,\n    WelcomeComponent,\n    FeedbackComponent,\n    ChangepasswordComponent,\n    LabelfilterPipe,\n    EdittaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport Swal from 'sweetalert2';\nimport {Router} from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n  canActivate() {\n    console.log(localStorage.getItem('sid'));\n    if (localStorage.getItem('sid')!= undefined) {\n      return true;\n    }\n    else {\n      Swal.fire('Oops', 'First Login the application', \"error\");\n      this.router.navigate(['/']);\n    }\n  }\n}\n","import { Router } from '@angular/router';\nimport { TaskService } from './../../../service/task.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-addtask',\n  templateUrl: './addtask.component.html',\n  styleUrls: ['./addtask.component.css']\n})\nexport class AddtaskComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private tser: TaskService, private router: Router) { }\n\n  addtaskform = new FormGroup({\n    sno: new FormControl(''),\n    taskname: new FormControl(''),\n    tasklabels: new FormControl(''),\n    taskdescription: new FormControl(''),\n    dateadded: new FormControl(''),\n    datecompletion: new FormControl(''),\n    status: new FormControl('')\n  });\n  resData;\n  errmsg;\n  ngOnInit(){\n    this.validate();\n  }\n\n  addtask(){\n    let formData = this.addtaskform.getRawValue();\n    this.tser.addtaskpanel(formData)\n   .subscribe(res => {\n    this.resData = res;\n    if(this.resData.err == 0)\n    {\n        console.log(res);\n        this.router.navigate(['/dashboard/task']);\n    }\n    if(this.resData.err == 1)\n    {\n      this.errmsg = this.resData.msg;\n    }\n   });\n  }\n\n  validate(){\n    this.addtaskform = this.fb.group({\n      'sno' : ['', Validators.required],\n      'taskname' : ['', Validators.required],\n      'tasklabels' :['', Validators.required],\n      'taskdescription' : ['',Validators.required],\n      'dateadded' : ['', Validators.required],\n      'datecompletion' : ['', Validators.required],\n      'status' : ['', Validators.required]\n    });\n  }\n}\n","\n<div class=\"container my-sm-auto addtask\">\n\n<div class=\"card text-center\">\n    <div class=\"card-header\">\n        <h1>Add Task</h1>\n     </div>\n    <div class=\"card-body\">\n        <form [formGroup] = \"addtaskform\" (ngSubmit)= addtask()>\n            <div class=\"form-group\">\n                <label>sno</label><br>\n                <input type=\"text\" name=\"sno.\" class = \"form-control\" formControlName=\"sno\"/>\n            </div>\n            <div class=\"form-group\">\n                <label>TaskName</label><br>\n                <input type=\"text\" name=\"taskname\" class=\"form-control\" formControlName=\"taskname\"/>\n            </div>\n            <div class=\"form-group\">\n                <label>TaskLabels</label><br>\n                <select name=\"tasklabels\" class=\"form-control\" formControlName=\"tasklabels\">\n                    <option>Select Option</option>\n                    <option>Personal</option>\n                    <option>Work</option>\n                    <option>Shopping</option>\n                    <option>Others..</option>\n                 </select>\n            </div>\n            <div class=\"form-group\">\n                <label>TaskDescription</label><br>\n                <textarea  name = \"taskdescription\" class = \"form-control\" formControlName=\"taskdescription\"></textarea>\n            </div>\n            <div class=\"form-group\">\n                <label>Date Added</label><br>\n                <input type=\"date\" name=\"dateadded\"  class= \"form-control\" formControlName=\"dateadded\"/>\n            </div>\n            <div class=\"form-group\"><br>\n                <label>Date Completion</label><br>\n               <input type = \"date\" name = \"datecompletion\" class=\"form-control\" formControlName=\"datecompletion\"/>\n            </div>\n            <div class=\"form-group\">\n                <label>Status</label><br>\n                <select name=\"status\" class=\"form-control\" formControlName=\"status\">\n                    <option>Select Option</option>\n                    <option>New</option>\n                    <option>InProgress</option>\n                    <option>Complete</option>\n                 </select>\n            </div>\n            <input type=\"submit\" value=\"Submit\" class=\" btn btn-success\">\n        </form>\n        </div>\n        <div class=\"card-footer text-muted\">\n          2 days ago\n        </div>\n      </div>\n\n</div>\n\n","import { Router } from '@angular/router';\nimport { RegisterService } from './../../../service/register.service';\nimport { FormBuilder, FormGroup, FormControl, Validators} from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private rser: RegisterService, private router: Router) { }\n\n  changepasswordform = new FormGroup({\n    oldpass : new FormControl(''),\n    newpass : new FormControl(''),\n    conpass : new FormControl('')\n  })\n\n  errmsg;\n  uid;\n  ngOnInit(): void {\n    this.validate();\n  }\n  changepass(){\n    let fData = this.changepasswordform.getRawValue();\n    if(fData.newpass == fData.conpass) {\n        this.rser.changepass({'oldpass': fData.oldpass, 'newpass': fData.newpass, 'uid': localStorage.getItem('sid')})\n        .subscribe(res => {\n          console.log(res);\n        })\n    }\n    else {\n      this.errmsg = \"New pass and Confirm password does not Match\";\n    }\n  }\n  validate(){\n    this.changepasswordform = this.fb.group({\n      \"oldpass\" : ['', Validators.required],\n      \"newpass\" : ['', Validators.required],\n      'conpass': ['', Validators.required]  \n   })\n  }\n\n}\n","<div class=\"container\">\n<h1 class=\"text-center\">Change Password</h1>\n<form [formGroup]=\"changepasswordform\" (ngSubmit) = changepass()>\n    <div *ngIf = 'errmsg' class=\"alert alert-danger\">\n        {{errmsg}}\n    </div>\n    <div class=\"form-group\" >\n        <label>Old Password</label>\n        <input type=\"password\" class=\"form-control\" formControlName=\"oldpass\">\n    </div>\n    <div class=\"form-group\" >\n            <label>New Password</label>\n            <input type=\"password\" class=\"form-control\"formControlName=\"newpass\">\n    </div>\n    <div class=\"form-group\" >\n         <label>Confirm Password</label>\n        <input type=\"password\" class=\"form-control\" formControlName=\"conpass\">\n    </div><br>\n    <input type=\"submit\" value=\"Submit\"  class=\"btn btn-success\">\n</form>\n</div>\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  uid;\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n   this.uid = localStorage.getItem('sid');\n  }\n  logout() {\n    localStorage.removeItem('sid');\n    this.router.navigate(['/']);\n  }\n\n\n}\n","<body>\n<input type = \"checkbox\" id=\"check\">\n <label for= \"check\">\n   <i class=\"icon-align-justify\" id=\"btn\"></i>\n   <i class=\"icon-align-right\" id=\"cancel\"></i>\n </label>\n<div class = \"sidebar\">\n  <header>Welcome to ToDo</header>\n    <ul>\n      <li>\n        <a routerLink ='/dashboard'><i class=\"icon-user\"></i>&nbsp;&nbsp;{{uid}}</a>\n      </li>\n      <li>\n        <a routerLink = \"task\"><i class = \"icon-tasks\"></i>&nbsp;&nbsp;Your Task</a>\n      </li>\n      <li>\n        <a routerLink = \"addtask\"><i class = \"icon-pencil\"></i>&nbsp;&nbsp;Add Task</a>\n      </li>\n      <li>\n        <a routerLink =\"Feedback\"><i class = \"icon-comment\"></i>&nbsp;&nbsp;Feedback</a>\n      </li>\n      <li>\n        <a routerLink=\"changepassword\"><i class = \"icon-pencil\"></i>&nbsp;&nbsp;Change Password</a>\n      </li>\n      <li>\n        <a href=\"#\" (click) = logout()><i class = \"icon-fixed-width icon-ban-circle\"></i>&nbsp;&nbsp;Logout</a>\n      </li>\n  </ul>\n</div>\n<section>\n  <router-outlet></router-outlet>\n</section>\n</body>","import { Router } from '@angular/router';\nimport { TaskService } from './../../../service/task.service';\nimport { FormBuilder, FormGroup, FormControl, Validators} from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private tser: TaskService, private router: Router) { }\n  feedform = new FormGroup({\n    feedname: new FormControl(''),\n    feedemail: new FormControl(''),\n    feedmobile : new FormControl(''),\n    feedmessage: new FormControl('')\n  })\n  resData;\n  errmsg;\n  ngOnInit(): void {\n    this.validate();\n  }\n  givefeed(){\n    let formData = this.feedform.getRawValue();\n    this.tser.addfeed(formData)\n    .subscribe(res => {\n      this.resData = res;\n      if(this.resData.err == 0)\n      {\n         console.log(res);\n      }\n      if(this.resData.err == 1)\n      {\n        this.errmsg = this.resData.msg;\n      }\n    });\n  }\n  validate(){\n    this.feedform = this.fb.group ({\n      'feedname': ['', Validators.required],\n      'feedemail':['',Validators.required],\n      'feedmobile':['', Validators.required],\n      'feedmessage':['', Validators.required]\n    });\n  }\n\n}\n","<div class=\"container\">\n    <h1 class=\"text-center\">Feedback Panel</h1>\n    <form [formGroup]=\"feedform\" (ngSubmit) = \"givefeed()\">\n        <div *ngIf = 'errmsg' class=\"alert alert-danger\">\n            {{errmsg}}\n        </div>\n        <div class= \"form-group\">\n            <label>Name</label>\n            <input type=\"text\" name=\"feedname\" class=\"form-control\" formControlName=\"feedname\">\n            <div *ngIf=\"feedform.controls.feedname.invalid && feedform.controls.feedname.touched\" class=\"alert alert-danger\">\n                <div *ngIf=\"feedform.controls.feedname.errors.required\">\n                    Name is Required.\n                </div>\n            </div>\n        </div>\n        <div class= \"form-group\">\n            <label>Email</label>\n            <input type=\"email\" name=\"feedemail\" class=\"form-control\" formControlName=\"feedemail\">\n            <div *ngIf=\"feedform.controls.feedemail.invalid && feedform.controls.feedemail.touched\" class=\"alert alert-danger\">\n                <div *ngIf=\"feedform.controls.feedemail.errors.required\">\n                    Email is Required.\n                </div>\n            </div>\n        </div>\n        <div class= \"form-group\">\n            <label>Mobile</label>\n            <input type=\"number\" name=\"feedmobile\" class=\"form-control\" formControlName=\"feedmobile\">\n            <div *ngIf=\"feedform.controls.feedmobile.invalid && feedform.controls.feedmobile.touched\" class=\"alert alert-danger\">\n                <div *ngIf=\"feedform.controls.feedmobile.errors.required\">\n                    Mobile is Required.\n                </div>\n            </div>\n        </div>\n        <div class= \"form-group\">\n            <label>Message</label>\n            <textarea class=\"form-control\" formControlName=\"feedmessage\"></textarea>\n            <div *ngIf=\"feedform.controls.feedmessage.invalid && feedform.controls.feedmessage.touched\" class=\"alert alert-danger\">\n                <div *ngIf=\"feedform.controls.feedmessage.errors.required\">\n                 Message is Required.\n                </div>\n            </div>\n        </div>\n        <input type=\"submit\" value=\"Submit\" class=\"btn btn-success\" [disabled]=\"feedform.invalid\"/>\n    </form>\n</div>","import { TaskService } from './../../../service/task.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n\n  constructor(private tser: TaskService) { }\n\n  resData;\n  taskData;\n  deltask(id) {\n    this.tser.deletegettask(id)\n   .subscribe(res => {\n    this.tser.addgettask()\n    .subscribe(res => {\n        this.resData = res;\n        if(this.resData.err == 0) {\n          this.taskData = this.resData.cdata;\n        }\n    })\n   })\n   }\n   ngOnInit() {\n     this.tser.addgettask()\n     .subscribe(res => {\n         this.resData = res;\n         if(this.resData.err == 0) {\n           this.taskData = this.resData.cdata;\n         }\n     })\n   }\n\n}\n","<h1 class=\"taskheading text-center\"> Task Table</h1>\n<div class=\"container tasktable\">\n<table class=\"table\">\n    <tr>\n        <td colspan=\"6\" class=\" text-center\">\n        </td>\n    </tr>\n    <tr>\n        <th>S.no</th>\n        <th>Task</th>\n        <th>Purpose</th>\n        <th>Description</th>\n        <th>Date Added</th>\n        <th>Date Completed</th>\n        <th>Status</th>\n        <th>Action</th>\n    </tr>\n    <tr *ngFor =\"let c of taskData;let i = index\">\n        <td>{{i+1}}</td>\n        <td>{{c.taskname|uppercase}}</td>\n        <td>{{c.tasklabels|uppercase}}</td>\n        <td>{{c.taskdescription}}</td>\n        <td>{{c.dateadded|date}}</td>\n        <td>{{c.datecompletion|date}}</td>\n        <td>{{c.status}}</td>\n        <td><button class=\"btn btn-success edit\"><a routerLink=\"../edittask/{{c._id}}\"><i class = icon-pencil></i>&nbsp;&nbsp;Edit</a></button>&nbsp;&nbsp;\n        <button class=\"btn btn-danger delete\"><a href=\"javascript:void(0)\" (click)=\"deltask(c._id)\"><i class = icon-trash></i>&nbsp;&nbsp;Delete</a></button></td>\n    </tr>\n</table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container welcome\">\n<h1 class=\"text-center welcomehead\">Welcome in ToDo</h1>\n<h3 class=\"text-center welcomepara\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Natus, facere beatae. Delectus, similique rem quia dolore at soluta aliquam, voluptatibus rerum adipisci maxime minus reiciendis esse. Quasi, consectetur illum? Eligendi.</h3>\n<button class=\"btn btn-danger btn-lg addbtn\"><a routerLink = \"addtask\">AddTask</a></button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { TaskService } from 'src/app/service/task.service';\n\n@Component({\n  selector: 'app-edittask',\n  templateUrl: './edittask.component.html',\n  styleUrls: ['./edittask.component.css']\n})\nexport class EdittaskComponent implements OnInit {\n\n  edittaskform = new  FormGroup({\n    sno: new FormControl(''),\n    taskname: new FormControl(''),\n    tasklabels: new FormControl(''),\n    taskdescription: new FormControl(''),\n    dateadded: new FormControl(''),\n    datecompletion: new FormControl(''),\n    status: new FormControl('')\n  });\n  cid;\n  resdata;\n  formData;\n\n  constructor(private fb: FormBuilder, private ar: ActivatedRoute, private tser: TaskService) { }\n \n  ngOnInit() {\n    this.validate();\n    this.ar.params.subscribe(par => {\n      this.cid = par.id;\n      this.tser.addgettaskbyid(this.cid)\n      .subscribe(res => {\n        this.resdata = res;\n        if (this.resdata.err == 0) {\n            this.edittaskform.controls.sno.patchValue(this.resdata.cdata[0].id);\n            this.edittaskform.controls.taskname.patchValue(this.resdata.cdata[0].taskname);\n            this.edittaskform.controls.tasklabels.patchValue(this.resdata.cdata[0].tasklabels);\n            this.edittaskform.controls.taskdescription.patchValue(this.resdata.cdata[0].taskdescription);\n            this.edittaskform.controls.dateadded.patchValue(this.resdata.cdata[0].dateadded);\n            this.edittaskform.controls.datecompletion.patchValue(this.resdata.cdata[0].datecompletion);\n            this.edittaskform.controls.status.patchValue(this.resdata.cdata[0].status);\n        }\n      });\n    });\n  }\n  edittask(id) {\n    let formData = this.edittaskform.getRawValue();\n    let uid = this.cid;\n    this.tser.addposttaskbyid(formData, uid)\n   .subscribe(res => {\n     console.log(res);\n   });\n  }\n  validate() {\n      this.edittaskform = this.fb.group({\n        'sno' : ['', Validators.required],\n        'taskname' : ['', Validators.required],\n        'tasklabels' :['', Validators.required],\n        'taskdescription' : ['',Validators.required],\n        'dateadded' : ['', Validators.required],\n        'datecompletion' : ['', Validators.required],\n        'status' : ['', Validators.required]\n      })\n  }\n}\n\n","<div class=\"container addtask\">\n    <h1>Edit Task</h1>\n<form [formGroup] = \"edittaskform\" (ngSubmit)= edittask(cid)>\n    <div class=\"form-group\">\n        <label>sno</label><br>\n        <input type=\"text\" name=\"sno.\" class = \"form-control\" formControlName=\"sno\"/>\n    </div>\n    <div class=\"form-group\">\n        <label>TaskName</label><br>\n        <input type=\"text\" name=\"taskname\" class=\"form-control\" formControlName=\"taskname\"/>\n    </div>\n    <div class=\"form-group\">\n        <label>TaskLabels</label><br>\n        <select name=\"tasklabels\" class=\"form-control\" formControlName=\"tasklabels\">\n            <option>Select Option</option>\n            <option>Personal</option>\n            <option>Work</option>\n            <option>Shopping</option>\n            <option>Others..</option>\n         </select>\n    </div>\n    <div class=\"form-group\">\n        <label>TaskDescription</label><br>\n        <textarea  name = \"taskdescription\" class = \"form-control\" formControlName=\"taskdescription\"></textarea>\n    </div>\n    <div class=\"form-group\">\n        <label>Date Added</label><br>\n        <input type=\"date\" name=\"dateadded\"  class= \"form-control\" formControlName=\"dateadded\"/>\n    </div>\n    <div class=\"form-group\"><br>\n        <label>Date Completion</label><br>\n       <input type = \"date\" name = \"datecompletion\" class=\"form-control\" formControlName=\"datecompletion\"/>\n    </div>\n    <div class=\"form-group\">\n        <label>Status</label><br>\n        <select name=\"status\" class=\"form-control\" formControlName=\"status\">\n            <option>Select Option</option>\n            <option>New</option>\n            <option>InProgress</option>\n            <option>Complete</option>\n         </select>\n    </div>\n    <input type=\"submit\" value=\"Submit\" class=\" btn btn-success\">\n</form>\n</div>\n\n","import { LoginService } from './../../service/login.service';\nimport { Component, OnInit } from '@angular/core';\nimport {HttpClientModule, HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  myform: FormGroup;\n  resData;\n  errmsg;\n  constructor(private fb: FormBuilder, private lser: LoginService, private router: Router) { }\n\n  ngOnInit(){\n    this.validate();\n  }\n  Login(){\n    let formData = this.myform.getRawValue();\n    this.lser.loginpanel(formData)\n    .subscribe(res => {\n      this.resData = res;\n      if(this.resData.err == 0)\n      {\n          localStorage.setItem('sid', this.resData.ulogin);\n          this.router.navigate(['/dashboard']);\n      }\n      if(this.resData.err == 1)\n      {\n        this.errmsg = this.resData.msg;\n      }\n  })\n  }\nvalidate(){\n  this.myform = this.fb.group({\n    'email':['', Validators.required],\n    'password':['', Validators.required]\n  });\n}\n}\n","<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n<!------ Include the above in your HEAD tag ---------->\n\n<div class=\"sidenav\">\n         <div class=\"login-main-text\">\n            <h2>Application<br> Login Page</h2>\n            <p>Login or register from here to access.</p>\n         </div>\n      </div>\n      <div class=\"main\">\n         <div class=\"col-md-6 col-sm-12\">\n            <div class=\"login-form\">\n                <form [formGroup]=\"myform\" (ngSubmit)=\"Login()\">\n                    <div class=\"form-group\">\n                        <div *ngIf = 'errmsg' class=\"alert alert-danger\">\n                            {{errmsg}}\n                        </div>\n                            <label>Email</label>\n                            <input type=\"text\" name=\"email\" class=\"form-control\" formControlName=\"email\"/>\n                            <div *ngIf=\"myform.controls.email.invalid && myform.controls.email.touched\" class=\"alert alert-danger\">\n                                <div *ngIf=\"myform.controls.email.errors.required\">\n                                    Email is Required.\n                                </div>\n                            </div>\n                    </div>\n                    <div class=\"form-group\">\n                         <label>Password</label>\n                         <input type=\"password\" name=\"pass\" class=\"form-control\" formControlName=\"password\"/>\n                         <div *ngIf=\"myform.controls.password.invalid && myform.controls.password.touched\" class=\"alert alert-danger\">\n                            <div *ngIf=\"myform.controls.password.errors.required\">\n                                Password is Required.\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"checkbox\" name=\"chckbx\">Remember Me\n                    </div>\n                    <input type=\"submit\" value=\"Login\" class=\"btn btn-success\" [disabled]=\"myform.invalid\"/>&nbsp;&nbsp;&nbsp;&nbsp;<input type=\"submit\" class=\"btn btn-danger\" value=\"Register\" routerLink=\"/register\">\n                    </form>\n            </div>\n         </div>\n      </div>\n","import { RegisterService } from './../../service/register.service';\nimport { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private rser: RegisterService, private router: Router) { }\n\n  regform = new FormGroup({\n    username: new FormControl(''),\n    email: new FormControl(''),\n    mobile: new FormControl(''),\n    password: new FormControl('')\n  });\n  resData;\n  errmsg;\n\n  ngOnInit(): void {\n    this.validate();\n  }\n\n  Register(){\n    let formData = this.regform.getRawValue();\n    this.rser.registerpanel(formData)\n    .subscribe(res => {\n      this.resData = res;\n      if(this.resData.err == 0)\n      {\n          console.log(res);\n          localStorage.setItem('sid', this.resData.ulogin);\n          this.router.navigate(['']);\n      }\n      if(this.resData.err == 1)\n      {\n        this.errmsg = this.resData.msg;\n      }\n  })\n  }\n  validate(){\n    this.regform = this.fb.group({\n      'username':['', Validators.required],\n      'email':['', Validators.required],\n      'mobile':['', Validators.required],\n      'password':['', Validators.required]\n    });\n  }\n}\n","<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n<!------ Include the above in your HEAD tag ---------->\n\n<div class=\"sidenav\">\n         <div class=\"login-main-text\">\n            <h2>Welcome to ToDo</h2>\n            <p>Login or register from here to access.</p>\n         </div>\n      </div>\n      <div class=\"main\">\n         <div class=\"col-md-6 col-sm-12\">\n            <div class=\"login-form\">\n                <form [formGroup]=\"regform\" (ngSubmit)=\"Register()\">\n                    <div class=\"form-group\">\n                        <div *ngIf = 'errmsg' class=\"alert alert-danger\">\n                            {{errmsg}}\n                        </div>\n                            <label>Name</label>\n                            <input type=\"text\" name=\"username\" class=\"form-control\" formControlName=\"username\"/>\n                            <div *ngIf=\"regform.controls.username.invalid && regform.controls.username.touched\" class=\"alert alert-danger\">\n                                <div *ngIf=\"regform.controls.username.errors.required\">\n                                    Name is Required.\n                                </div>\n                            </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Email</label>\n                        <input type=\"email\" name=\"email\" class=\"form-control\" formControlName=\"email\"/>\n                        <div *ngIf=\"regform.controls.email.invalid && regform.controls.email.touched\" class=\"alert alert-danger\">\n                           <div *ngIf=\"regform.controls.email.errors.required\">\n                               Email is Required.\n                           </div>\n                       </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Mobile</label>\n                        <input type=\"number\" name=\"mobile\" class=\"form-control\" formControlName=\"mobile\"/>\n                        <div *ngIf=\"regform.controls.mobile.invalid && regform.controls.mobile.touched\" class=\"alert alert-danger\">\n                           <div *ngIf=\"regform.controls.rmobile.errors.required\">\n                               Mobile Number is Required.\n                           </div>\n                       </div>\n                    </div>\n                    <div class=\"form-group\">\n                         <label>Password</label>\n                         <input type=\"password\" name=\"pass\" class=\"form-control\" formControlName=\"password\"/>\n                         <div *ngIf=\"regform.controls.password.invalid && regform.controls.password.touched\" class=\"alert alert-danger\">\n                            <div *ngIf=\"regform.controls.password.errors.required\">\n                                Password is Required.\n                            </div>\n                        </div>\n                    </div>\n                    <input type=\"submit\" value=\"Register\" class=\"btn btn-success\"  [disabled]=\"regform.invalid\"/>\n                    </form>\n            </div>\n         </div>\n      </div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'labelfilter'\n})\nexport class LabelfilterPipe implements PipeTransform {\n\n  transform(items: any, filter: any, defaultFilter: boolean): any {\n    if (!filter){\n      return items;\n    }\n\n    if (!Array.isArray(items)){\n      return items;\n    }\n\n    if (filter && Array.isArray(items)) {\n      let filterKeys = Object.keys(filter);\n\n      if (defaultFilter) {\n        return items.filter(item =>\n            filterKeys.reduce((x, keyName) =>\n                (x && new RegExp(filter[keyName], 'gi').test(item[keyName])) || filter[keyName] == \"\", true));\n      }\n      else {\n        return items.filter(item => {\n          return filterKeys.some((keyName) => {\n            return new RegExp(filter[keyName], 'gi').test(item[keyName]) || filter[keyName] == \"\";\n          });\n        });\n      }\n    }\n  }\n\n}\n","import { HttpClientModule,HttpClient} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient) { }\n\n  url = \"http://localhost:8890/api/\";\n  loginpanel(data){\n    return this.http.post(this.url +'loginpanel',data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private http: HttpClient) { }\n  \n  url = \"http://localhost:8890/api/\";\n  registerpanel(data){\n    return this.http.post(this.url + 'registerpanel',data);\n  }\n  changepass(data){\n    return this.http.post(this.url + 'changeadminpass', data);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http: HttpClient) { }\n\n  url = \"http://localhost:8890/api/\";\n  addtaskpanel(data){\n    return this.http.post(this.url + 'addtaskpanel', data);\n  }\n  addgettask(){\n    return this.http.get(this.url + 'addgettask');\n  }\n deletegettask(id){\n  return this.http.get(this.url + 'deletetask/' + id);\n  }\n  addfeed(data){\n    return this.http.post(this.url + 'addfeed', data);\n  }\n  addgettaskbyid(id) {\n    return this.http.get(this.url + 'fetchtaskbyid/' + id);\n  }\n  addposttaskbyid(data, id) {\n    return this.http.post(this.url + 'updatetask/' + id, data);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}