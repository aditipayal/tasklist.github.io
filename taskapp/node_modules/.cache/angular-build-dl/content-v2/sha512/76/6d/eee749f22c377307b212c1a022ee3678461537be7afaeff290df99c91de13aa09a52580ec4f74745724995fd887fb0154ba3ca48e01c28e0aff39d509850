{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/guard/auth.guard.ts","./src/app/pages/dashboard/addtask/addtask.component.ts","./src/app/pages/dashboard/addtask/addtask.component.html","./src/app/pages/dashboard/changepassword/changepassword.component.ts","./src/app/pages/dashboard/changepassword/changepassword.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/dashboard/feedback/feedback.component.ts","./src/app/pages/dashboard/feedback/feedback.component.html","./src/app/pages/dashboard/task/task.component.ts","./src/app/pages/dashboard/task/task.component.html","./src/app/pages/dashboard/welcome/welcome.component.ts","./src/app/pages/dashboard/welcome/welcome.component.html","./src/app/pages/edittask/edittask.component.ts","./src/app/pages/edittask/edittask.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.component.html","./src/app/pipes/labelfilter.pipe.ts","./src/app/service/login.service.ts","./src/app/service/register.service.ts","./src/app/service/task.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AuthGuard } from './guard/auth.guard';\nimport { ChangepasswordComponent } from './pages/dashboard/changepassword/changepassword.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { TaskComponent } from './pages/dashboard/task/task.component';\nimport { AddtaskComponent } from './pages/dashboard/addtask/addtask.component';\nimport { WelcomeComponent } from './pages/dashboard/welcome/welcome.component';\nimport { FeedbackComponent } from './pages/dashboard/feedback/feedback.component';\nimport { EdittaskComponent } from './pages/edittask/edittask.component';\nconst routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate : [AuthGuard],\n  children: [{path: 'task', component: TaskComponent},\n     {path: '', component: WelcomeComponent},\n     {path: 'changepassword', component: ChangepasswordComponent},\n     {path: 'addtask', component: AddtaskComponent},\n     {path: 'edittask/:id', component: EdittaskComponent},\n     {path: 'Feedback', component: FeedbackComponent}]},\n  {path: 'register', component: RegisterComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'taskapp';\n}\n","<router-outlet></router-outlet>","import { AuthGuard } from './guard/auth.guard';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { TaskComponent } from './pages/dashboard/task/task.component';\nimport { AddtaskComponent } from './pages/dashboard/addtask/addtask.component';\nimport { WelcomeComponent } from './pages/dashboard/welcome/welcome.component';\nimport { FeedbackComponent } from './pages/dashboard/feedback/feedback.component';\nimport { ChangepasswordComponent } from './pages/dashboard/changepassword/changepassword.component';\nimport { LabelfilterPipe } from './pipes/labelfilter.pipe';\nimport { EdittaskComponent } from './pages/edittask/edittask.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    RegisterComponent,\n    TaskComponent,\n    AddtaskComponent,\n    WelcomeComponent,\n    FeedbackComponent,\n    ChangepasswordComponent,\n    LabelfilterPipe,\n    EdittaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport Swal from 'sweetalert2';\nimport {Router} from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n  canActivate() {\n    console.log(localStorage.getItem('sid'));\n    if (localStorage.getItem('sid')!= undefined) {\n      return true;\n    }\n    else {\n      Swal.fire('Oops', 'First Login the application', \"error\");\n      this.router.navigate(['/']);\n    }\n  }\n}\n","import { Router } from '@angular/router';\nimport { TaskService } from './../../../service/task.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-addtask',\n  templateUrl: './addtask.component.html',\n  styleUrls: ['./addtask.component.css']\n})\nexport class AddtaskComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private tser: TaskService, private router: Router) { }\n\n  addtaskform = new FormGroup({\n    sno: new FormControl(''),\n    taskname: new FormControl(''),\n    tasklabels: new FormControl(''),\n    taskdescription: new FormControl(''),\n    dateadded: new FormControl(''),\n    datecompletion: new FormControl(''),\n    status: new FormControl('')\n  });\n  resData;\n  errmsg;\n  ngOnInit(){\n    this.validate();\n  }\n\n  addtask(){\n    let formData = this.addtaskform.getRawValue();\n    this.tser.addtaskpanel(formData)\n   .subscribe(res => {\n    this.resData = res;\n    if(this.resData.err == 0)\n    {\n        console.log(res);\n        this.router.navigate(['/dashboard/task']);\n    }\n    if(this.resData.err == 1)\n    {\n      this.errmsg = this.resData.msg;\n    }\n   });\n  }\n\n  validate(){\n    this.addtaskform = this.fb.group({\n      'sno' : ['', Validators.required],\n      'taskname' : ['', Validators.required],\n      'tasklabels' :['', Validators.required],\n      'taskdescription' : ['',Validators.required],\n      'dateadded' : ['', Validators.required],\n      'datecompletion' : ['', Validators.required],\n      'status' : ['', Validators.required]\n    });\n  }\n}\n","\n<div class=\"container my-sm-auto addtask\">\n\n<div class=\"card text-center\">\n    <div class=\"card-header\">\n        <h1>Add Task</h1>\n     </div>\n    <div class=\"card-body\">\n        <form [formGroup] = \"addtaskform\" (ngSubmit)= addtask()>\n            <div class=\"form-group\">\n                <label>sno</label><br>\n                <input type=\"text\" name=\"sno.\" class = \"form-control\" formControlName=\"sno\"/>\n            </div>\n            <div class=\"form-group\">\n                <label>TaskName</label><br>\n                <input type=\"text\" name=\"taskname\" class=\"form-control\" formControlName=\"taskname\"/>\n            </div>\n            <div class=\"form-group\">\n                <label>TaskLabels</label><br>\n                <select name=\"tasklabels\" class=\"form-control\" formControlName=\"tasklabels\">\n                    <option>Select Option</option>\n                    <option>Personal</option>\n                    <option>Work</option>\n                    <option>Shopping</option>\n                    <option>Others..</option>\n                 </select>\n            </div>\n            <div class=\"form-group\">\n                <label>TaskDescription</label><br>\n                <textarea  name = \"taskdescription\" class = \"form-control\" formControlName=\"taskdescription\"></textarea>\n            </div>\n            <div class=\"form-group\">\n                <label>Date Added</label><br>\n                <input type=\"date\" name=\"dateadded\"  class= \"form-control\" formControlName=\"dateadded\"/>\n            </div>\n            <div class=\"form-group\"><br>\n                <label>Date Completion</label><br>\n               <input type = \"date\" name = \"datecompletion\" class=\"form-control\" formControlName=\"datecompletion\"/>\n            </div>\n            <div class=\"form-group\">\n                <label>Status</label><br>\n                <select name=\"status\" class=\"form-control\" formControlName=\"status\">\n                    <option>Select Option</option>\n                    <option>New</option>\n                    <option>InProgress</option>\n                    <option>Complete</option>\n                 </select>\n            </div>\n            <input type=\"submit\" value=\"Submit\" class=\" btn btn-success\">\n        </form>\n        </div>\n        <div class=\"card-footer text-muted\">\n          2 days ago\n        </div>\n      </div>\n\n</div>\n\n","import { Router } from '@angular/router';\nimport { RegisterService } from './../../../service/register.service';\nimport { FormBuilder, FormGroup, FormControl, Validators} from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private rser: RegisterService, private router: Router) { }\n\n  changepasswordform = new FormGroup({\n    oldpass : new FormControl(''),\n    newpass : new FormControl(''),\n    conpass : new FormControl('')\n  })\n\n  errmsg;\n  uid;\n  ngOnInit(): void {\n    this.validate();\n  }\n  changepass(){\n    let fData = this.changepasswordform.getRawValue();\n    if(fData.newpass == fData.conpass) {\n        this.rser.changepass({'oldpass': fData.oldpass, 'newpass': fData.newpass, 'uid': localStorage.getItem('sid')})\n        .subscribe(res => {\n          console.log(res);\n        })\n    }\n    else {\n      this.errmsg = \"New pass and Confirm password does not Match\";\n    }\n  }\n  validate(){\n    this.changepasswordform = this.fb.group({\n      \"oldpass\" : ['', Validators.required],\n      \"newpass\" : ['', Validators.required],\n      'conpass': ['', Validators.required]  \n   })\n  }\n\n}\n","<div class=\"container\">\n<h1 class=\"text-center\">Change Password</h1>\n<form [formGroup]=\"changepasswordform\" (ngSubmit) = changepass()>\n    <div *ngIf = 'errmsg' class=\"alert alert-danger\">\n        {{errmsg}}\n    </div>\n    <div class=\"form-group\" >\n        <label>Old Password</label>\n        <input type=\"password\" class=\"form-control\" formControlName=\"oldpass\">\n    </div>\n    <div class=\"form-group\" >\n            <label>New Password</label>\n            <input type=\"password\" class=\"form-control\"formControlName=\"newpass\">\n    </div>\n    <div class=\"form-group\" >\n         <label>Confirm Password</label>\n        <input type=\"password\" class=\"form-control\" formControlName=\"conpass\">\n    </div><br>\n    <input type=\"submit\" value=\"Submit\"  class=\"btn btn-success\">\n</form>\n</div>\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  uid;\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n   this.uid = localStorage.getItem('sid');\n  }\n  logout() {\n    localStorage.removeItem('sid');\n    this.router.navigate(['/']);\n  }\n\n\n}\n","<body>\n<input type = \"checkbox\" id=\"check\">\n <label for= \"check\">\n   <i class=\"icon-align-justify\" id=\"btn\"></i>\n   <i class=\"icon-align-right\" id=\"cancel\"></i>\n </label>\n<div class = \"sidebar\">\n  <header>Welcome to ToDo</header>\n    <ul>\n      <li>\n        <a routerLink ='/dashboard'><i class=\"icon-user\"></i>&nbsp;&nbsp;{{uid}}</a>\n      </li>\n      <li>\n        <a routerLink = \"task\"><i class = \"icon-tasks\"></i>&nbsp;&nbsp;Your Task</a>\n      </li>\n      <li>\n        <a routerLink = \"addtask\"><i class = \"icon-pencil\"></i>&nbsp;&nbsp;Add Task</a>\n      </li>\n      <li>\n        <a routerLink =\"Feedback\"><i class = \"icon-comment\"></i>&nbsp;&nbsp;Feedback</a>\n      </li>\n      <li>\n        <a routerLink=\"changepassword\"><i class = \"icon-pencil\"></i>&nbsp;&nbsp;Change Password</a>\n      </li>\n      <li>\n        <a href=\"#\" (click) = logout()><i class = \"icon-fixed-width icon-ban-circle\"></i>&nbsp;&nbsp;Logout</a>\n      </li>\n  </ul>\n</div>\n<section>\n  <router-outlet></router-outlet>\n</section>\n</body>","import { Router } from '@angular/router';\nimport { TaskService } from './../../../service/task.service';\nimport { FormBuilder, FormGroup, FormControl, Validators} from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private tser: TaskService, private router: Router) { }\n  feedform = new FormGroup({\n    feedname: new FormControl(''),\n    feedemail: new FormControl(''),\n    feedmobile : new FormControl(''),\n    feedmessage: new FormControl('')\n  })\n  resData;\n  errmsg;\n  ngOnInit(): void {\n    this.validate();\n  }\n  givefeed(){\n    let formData = this.feedform.getRawValue();\n    this.tser.addfeed(formData)\n    .subscribe(res => {\n      this.resData = res;\n      if(this.resData.err == 0)\n      {\n         console.log(res);\n      }\n      if(this.resData.err == 1)\n      {\n        this.errmsg = this.resData.msg;\n      }\n    });\n  }\n  validate(){\n    this.feedform = this.fb.group ({\n      'feedname': ['', Validators.required],\n      'feedemail':['',Validators.required],\n      'feedmobile':['', Validators.required],\n      'feedmessage':['', Validators.required]\n    });\n  }\n\n}\n","<div class=\"container\">\n    <h1 class=\"text-center\">Feedback Panel</h1>\n    <form [formGroup]=\"feedform\" (ngSubmit) = \"givefeed()\">\n        <div *ngIf = 'errmsg' class=\"alert alert-danger\">\n            {{errmsg}}\n        </div>\n        <div class= \"form-group\">\n            <label>Name</label>\n            <input type=\"text\" name=\"feedname\" class=\"form-control\" formControlName=\"feedname\">\n            <div *ngIf=\"feedform.controls.feedname.invalid && feedform.controls.feedname.touched\" class=\"alert alert-danger\">\n                <div *ngIf=\"feedform.controls.feedname.errors.required\">\n                    Name is Required.\n                </div>\n            </div>\n        </div>\n        <div class= \"form-group\">\n            <label>Email</label>\n            <input type=\"email\" name=\"feedemail\" class=\"form-control\" formControlName=\"feedemail\">\n            <div *ngIf=\"feedform.controls.feedemail.invalid && feedform.controls.feedemail.touched\" class=\"alert alert-danger\">\n                <div *ngIf=\"feedform.controls.feedemail.errors.required\">\n                    Email is Required.\n                </div>\n            </div>\n        </div>\n        <div class= \"form-group\">\n            <label>Mobile</label>\n            <input type=\"number\" name=\"feedmobile\" class=\"form-control\" formControlName=\"feedmobile\">\n            <div *ngIf=\"feedform.controls.feedmobile.invalid && feedform.controls.feedmobile.touched\" class=\"alert alert-danger\">\n                <div *ngIf=\"feedform.controls.feedmobile.errors.required\">\n                    Mobile is Required.\n                </div>\n            </div>\n        </div>\n        <div class= \"form-group\">\n            <label>Message</label>\n            <textarea class=\"form-control\" formControlName=\"feedmessage\"></textarea>\n            <div *ngIf=\"feedform.controls.feedmessage.invalid && feedform.controls.feedmessage.touched\" class=\"alert alert-danger\">\n                <div *ngIf=\"feedform.controls.feedmessage.errors.required\">\n                 Message is Required.\n                </div>\n            </div>\n        </div>\n        <input type=\"submit\" value=\"Submit\" class=\"btn btn-success\" [disabled]=\"feedform.invalid\"/>\n    </form>\n</div>","import { TaskService } from './../../../service/task.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n\n  constructor(private tser: TaskService) { }\n\n  resData;\n  taskData;\n  deltask(id) {\n    this.tser.deletegettask(id)\n   .subscribe(res => {\n    this.tser.addgettask()\n    .subscribe(res => {\n        this.resData = res;\n        if(this.resData.err == 0) {\n          this.taskData = this.resData.cdata;\n        }\n    })\n   })\n   }\n   ngOnInit() {\n     this.tser.addgettask()\n     .subscribe(res => {\n         this.resData = res;\n         if(this.resData.err == 0) {\n           this.taskData = this.resData.cdata;\n         }\n     })\n   }\n\n}\n","<h1 class=\"taskheading text-center\"> Task Table</h1>\n<div class=\"container tasktable\">\n<table class=\"table\">\n    <tr>\n        <td colspan=\"6\" class=\" text-center\">\n        </td>\n    </tr>\n    <tr>\n        <th>S.no</th>\n        <th>Task</th>\n        <th>Purpose</th>\n        <th>Description</th>\n        <th>Date Added</th>\n        <th>Date Completed</th>\n        <th>Status</th>\n        <th>Action</th>\n    </tr>\n    <tr *ngFor =\"let c of taskData;let i = index\">\n        <td>{{i+1}}</td>\n        <td>{{c.taskname|uppercase}}</td>\n        <td>{{c.tasklabels|uppercase}}</td>\n        <td>{{c.taskdescription}}</td>\n        <td>{{c.dateadded|date}}</td>\n        <td>{{c.datecompletion|date}}</td>\n        <td>{{c.status}}</td>\n        <td><button class=\"btn btn-success edit\"><a routerLink=\"../edittask/{{c._id}}\"><i class = icon-pencil></i>&nbsp;&nbsp;Edit</a></button>&nbsp;&nbsp;\n        <button class=\"btn btn-danger delete\"><a href=\"javascript:void(0)\" (click)=\"deltask(c._id)\"><i class = icon-trash></i>&nbsp;&nbsp;Delete</a></button></td>\n    </tr>\n</table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container welcome\">\n<h1 class=\"text-center welcomehead\">Welcome in ToDo</h1>\n<h3 class=\"text-center welcomepara\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Natus, facere beatae. Delectus, similique rem quia dolore at soluta aliquam, voluptatibus rerum adipisci maxime minus reiciendis esse. Quasi, consectetur illum? Eligendi.</h3>\n<button class=\"btn btn-danger btn-lg addbtn\"><a routerLink = \"addtask\">AddTask</a></button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { TaskService } from 'src/app/service/task.service';\n\n@Component({\n  selector: 'app-edittask',\n  templateUrl: './edittask.component.html',\n  styleUrls: ['./edittask.component.css']\n})\nexport class EdittaskComponent implements OnInit {\n\n  edittaskform = new  FormGroup({\n    sno: new FormControl(''),\n    taskname: new FormControl(''),\n    tasklabels: new FormControl(''),\n    taskdescription: new FormControl(''),\n    dateadded: new FormControl(''),\n    datecompletion: new FormControl(''),\n    status: new FormControl('')\n  });\n  cid;\n  resdata;\n  formData;\n\n  constructor(private fb: FormBuilder, private ar: ActivatedRoute, private tser: TaskService) { }\n \n  ngOnInit() {\n    this.validate();\n    this.ar.params.subscribe(par => {\n      this.cid = par.id;\n      this.tser.addgettaskbyid(this.cid)\n      .subscribe(res => {\n        this.resdata = res;\n        if (this.resdata.err == 0) {\n            this.edittaskform.controls.sno.patchValue(this.resdata.cdata[0].id);\n            this.edittaskform.controls.taskname.patchValue(this.resdata.cdata[0].taskname);\n            this.edittaskform.controls.tasklabels.patchValue(this.resdata.cdata[0].tasklabels);\n            this.edittaskform.controls.taskdescription.patchValue(this.resdata.cdata[0].taskdescription);\n            this.edittaskform.controls.dateadded.patchValue(this.resdata.cdata[0].dateadded);\n            this.edittaskform.controls.datecompletion.patchValue(this.resdata.cdata[0].datecompletion);\n            this.edittaskform.controls.status.patchValue(this.resdata.cdata[0].status);\n        }\n      });\n    });\n  }\n  edittask(id) {\n    let formData = this.edittaskform.getRawValue();\n    let uid = this.cid;\n    this.tser.addposttaskbyid(formData, uid)\n   .subscribe(res => {\n     console.log(res);\n   });\n  }\n  validate() {\n      this.edittaskform = this.fb.group({\n        'sno' : ['', Validators.required],\n        'taskname' : ['', Validators.required],\n        'tasklabels' :['', Validators.required],\n        'taskdescription' : ['',Validators.required],\n        'dateadded' : ['', Validators.required],\n        'datecompletion' : ['', Validators.required],\n        'status' : ['', Validators.required]\n      })\n  }\n}\n\n","<div class=\"container addtask\">\n    <h1>Edit Task</h1>\n<form [formGroup] = \"edittaskform\" (ngSubmit)= edittask(cid)>\n    <div class=\"form-group\">\n        <label>sno</label><br>\n        <input type=\"text\" name=\"sno.\" class = \"form-control\" formControlName=\"sno\"/>\n    </div>\n    <div class=\"form-group\">\n        <label>TaskName</label><br>\n        <input type=\"text\" name=\"taskname\" class=\"form-control\" formControlName=\"taskname\"/>\n    </div>\n    <div class=\"form-group\">\n        <label>TaskLabels</label><br>\n        <select name=\"tasklabels\" class=\"form-control\" formControlName=\"tasklabels\">\n            <option>Select Option</option>\n            <option>Personal</option>\n            <option>Work</option>\n            <option>Shopping</option>\n            <option>Others..</option>\n         </select>\n    </div>\n    <div class=\"form-group\">\n        <label>TaskDescription</label><br>\n        <textarea  name = \"taskdescription\" class = \"form-control\" formControlName=\"taskdescription\"></textarea>\n    </div>\n    <div class=\"form-group\">\n        <label>Date Added</label><br>\n        <input type=\"date\" name=\"dateadded\"  class= \"form-control\" formControlName=\"dateadded\"/>\n    </div>\n    <div class=\"form-group\"><br>\n        <label>Date Completion</label><br>\n       <input type = \"date\" name = \"datecompletion\" class=\"form-control\" formControlName=\"datecompletion\"/>\n    </div>\n    <div class=\"form-group\">\n        <label>Status</label><br>\n        <select name=\"status\" class=\"form-control\" formControlName=\"status\">\n            <option>Select Option</option>\n            <option>New</option>\n            <option>InProgress</option>\n            <option>Complete</option>\n         </select>\n    </div>\n    <input type=\"submit\" value=\"Submit\" class=\" btn btn-success\">\n</form>\n</div>\n\n","import { LoginService } from './../../service/login.service';\nimport { Component, OnInit } from '@angular/core';\nimport {HttpClientModule, HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  myform: FormGroup;\n  resData;\n  errmsg;\n  constructor(private fb: FormBuilder, private lser: LoginService, private router: Router) { }\n\n  ngOnInit(){\n    this.validate();\n  }\n  Login(){\n    let formData = this.myform.getRawValue();\n    this.lser.loginpanel(formData)\n    .subscribe(res => {\n      this.resData = res;\n      if(this.resData.err == 0)\n      {\n          localStorage.setItem('sid', this.resData.ulogin);\n          this.router.navigate(['/dashboard']);\n      }\n      if(this.resData.err == 1)\n      {\n        this.errmsg = this.resData.msg;\n      }\n  })\n  }\nvalidate(){\n  this.myform = this.fb.group({\n    'email':['', Validators.required],\n    'password':['', Validators.required]\n  });\n}\n}\n","<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n<!------ Include the above in your HEAD tag ---------->\n\n<div class=\"sidenav\">\n         <div class=\"login-main-text\">\n            <h2>Application<br> Login Page</h2>\n            <p>Login or register from here to access.</p>\n         </div>\n      </div>\n      <div class=\"main\">\n         <div class=\"col-md-6 col-sm-12\">\n            <div class=\"login-form\">\n                <form [formGroup]=\"myform\" (ngSubmit)=\"Login()\">\n                    <div class=\"form-group\">\n                        <div *ngIf = 'errmsg' class=\"alert alert-danger\">\n                            {{errmsg}}\n                        </div>\n                            <label>Email</label>\n                            <input type=\"text\" name=\"email\" class=\"form-control\" formControlName=\"email\"/>\n                            <div *ngIf=\"myform.controls.email.invalid && myform.controls.email.touched\" class=\"alert alert-danger\">\n                                <div *ngIf=\"myform.controls.email.errors.required\">\n                                    Email is Required.\n                                </div>\n                            </div>\n                    </div>\n                    <div class=\"form-group\">\n                         <label>Password</label>\n                         <input type=\"password\" name=\"pass\" class=\"form-control\" formControlName=\"password\"/>\n                         <div *ngIf=\"myform.controls.password.invalid && myform.controls.password.touched\" class=\"alert alert-danger\">\n                            <div *ngIf=\"myform.controls.password.errors.required\">\n                                Password is Required.\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"checkbox\" name=\"chckbx\">Remember Me\n                    </div>\n                    <input type=\"submit\" value=\"Login\" class=\"btn btn-success\" [disabled]=\"myform.invalid\"/>&nbsp;&nbsp;&nbsp;&nbsp;<input type=\"submit\" class=\"btn btn-danger\" value=\"Register\" routerLink=\"/register\">\n                    </form>\n            </div>\n         </div>\n      </div>\n","import { RegisterService } from './../../service/register.service';\nimport { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private rser: RegisterService, private router: Router) { }\n\n  regform = new FormGroup({\n    username: new FormControl(''),\n    email: new FormControl(''),\n    mobile: new FormControl(''),\n    password: new FormControl('')\n  });\n  resData;\n  errmsg;\n\n  ngOnInit(): void {\n    this.validate();\n  }\n\n  Register(){\n    let formData = this.regform.getRawValue();\n    this.rser.registerpanel(formData)\n    .subscribe(res => {\n      this.resData = res;\n      if(this.resData.err == 0)\n      {\n          console.log(res);\n          localStorage.setItem('sid', this.resData.ulogin);\n          this.router.navigate(['']);\n      }\n      if(this.resData.err == 1)\n      {\n        this.errmsg = this.resData.msg;\n      }\n  })\n  }\n  validate(){\n    this.regform = this.fb.group({\n      'username':['', Validators.required],\n      'email':['', Validators.required],\n      'mobile':['', Validators.required],\n      'password':['', Validators.required]\n    });\n  }\n}\n","<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n<!------ Include the above in your HEAD tag ---------->\n\n<div class=\"sidenav\">\n         <div class=\"login-main-text\">\n            <h2>Welcome to ToDo</h2>\n            <p>Login or register from here to access.</p>\n         </div>\n      </div>\n      <div class=\"main\">\n         <div class=\"col-md-6 col-sm-12\">\n            <div class=\"login-form\">\n                <form [formGroup]=\"regform\" (ngSubmit)=\"Register()\">\n                    <div class=\"form-group\">\n                        <div *ngIf = 'errmsg' class=\"alert alert-danger\">\n                            {{errmsg}}\n                        </div>\n                            <label>Name</label>\n                            <input type=\"text\" name=\"username\" class=\"form-control\" formControlName=\"username\"/>\n                            <div *ngIf=\"regform.controls.username.invalid && regform.controls.username.touched\" class=\"alert alert-danger\">\n                                <div *ngIf=\"regform.controls.username.errors.required\">\n                                    Name is Required.\n                                </div>\n                            </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Email</label>\n                        <input type=\"email\" name=\"email\" class=\"form-control\" formControlName=\"email\"/>\n                        <div *ngIf=\"regform.controls.email.invalid && regform.controls.email.touched\" class=\"alert alert-danger\">\n                           <div *ngIf=\"regform.controls.email.errors.required\">\n                               Email is Required.\n                           </div>\n                       </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Mobile</label>\n                        <input type=\"number\" name=\"mobile\" class=\"form-control\" formControlName=\"mobile\"/>\n                        <div *ngIf=\"regform.controls.mobile.invalid && regform.controls.mobile.touched\" class=\"alert alert-danger\">\n                           <div *ngIf=\"regform.controls.rmobile.errors.required\">\n                               Mobile Number is Required.\n                           </div>\n                       </div>\n                    </div>\n                    <div class=\"form-group\">\n                         <label>Password</label>\n                         <input type=\"password\" name=\"pass\" class=\"form-control\" formControlName=\"password\"/>\n                         <div *ngIf=\"regform.controls.password.invalid && regform.controls.password.touched\" class=\"alert alert-danger\">\n                            <div *ngIf=\"regform.controls.password.errors.required\">\n                                Password is Required.\n                            </div>\n                        </div>\n                    </div>\n                    <input type=\"submit\" value=\"Register\" class=\"btn btn-success\"  [disabled]=\"regform.invalid\"/>\n                    </form>\n            </div>\n         </div>\n      </div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'labelfilter'\n})\nexport class LabelfilterPipe implements PipeTransform {\n\n  transform(items: any, filter: any, defaultFilter: boolean): any {\n    if (!filter){\n      return items;\n    }\n\n    if (!Array.isArray(items)){\n      return items;\n    }\n\n    if (filter && Array.isArray(items)) {\n      let filterKeys = Object.keys(filter);\n\n      if (defaultFilter) {\n        return items.filter(item =>\n            filterKeys.reduce((x, keyName) =>\n                (x && new RegExp(filter[keyName], 'gi').test(item[keyName])) || filter[keyName] == \"\", true));\n      }\n      else {\n        return items.filter(item => {\n          return filterKeys.some((keyName) => {\n            return new RegExp(filter[keyName], 'gi').test(item[keyName]) || filter[keyName] == \"\";\n          });\n        });\n      }\n    }\n  }\n\n}\n","import { HttpClientModule,HttpClient} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient) { }\n\n  url = \"http://localhost:8890/api/\";\n  loginpanel(data){\n    return this.http.post(this.url +'loginpanel',data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private http: HttpClient) { }\n  \n  url = \"http://localhost:8890/api/\";\n  registerpanel(data){\n    return this.http.post(this.url + 'registerpanel',data);\n  }\n  changepass(data){\n    return this.http.post(this.url + 'changeadminpass', data);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http: HttpClient) { }\n\n  url = \"http://localhost:8890/api/\";\n  addtaskpanel(data){\n    return this.http.post(this.url + 'addtaskpanel', data);\n  }\n  addgettask(){\n    return this.http.get(this.url + 'addgettask');\n  }\n deletegettask(id){\n  return this.http.get(this.url + 'deletetask/' + id);\n  }\n  addfeed(data){\n    return this.http.post(this.url + 'addfeed', data);\n  }\n  addgettaskbyid(id) {\n    return this.http.get(this.url + 'fetchtaskbyid/' + id);\n  }\n  addposttaskbyid(data, id) {\n    return this.http.post(this.url + 'updatetask/' + id, data);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}